[{"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\index.js":"1","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\reportWebVitals.js":"2","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\App.js":"3","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\WordButton.js":"4","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\LivesDisplay.js":"5","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\words.js":"6","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\LevelDisplay.js":"7","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\VerticalBreak.js":"8","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\StartScreen.js":"9","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\EndScreen.js":"10","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\GameplayScreen.js":"11","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\utilities.js":"12","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\GithubFooter.js":"13"},{"size":219,"mtime":1610308984422,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1817,"mtime":1610490465959,"results":"17","hashOfConfig":"15"},{"size":2154,"mtime":1610476941857,"results":"18","hashOfConfig":"15"},{"size":727,"mtime":1610288834772,"results":"19","hashOfConfig":"15"},{"size":22247,"mtime":1610398669626,"results":"20","hashOfConfig":"15"},{"size":387,"mtime":1610299753758,"results":"21","hashOfConfig":"15"},{"size":384,"mtime":1610299959008,"results":"22","hashOfConfig":"15"},{"size":1138,"mtime":1610402374954,"results":"23","hashOfConfig":"15"},{"size":1778,"mtime":1610477462692,"results":"24","hashOfConfig":"15"},{"size":5153,"mtime":1611414743138,"results":"25","hashOfConfig":"15"},{"size":542,"mtime":1610485496253,"results":"26","hashOfConfig":"15"},{"size":486,"mtime":1610490932720,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"vp0aca",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\index.js",[],["57","58"],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\reportWebVitals.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\App.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\WordButton.js",["59","60"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './WordButton.css';\r\n\r\nconst WordButton = ({ shortcut, word, correctAnswer, onSelect, disabled, moveOutOfView }) => {\r\n  const [animationState, setAnimationState] = useState('none');\r\n\r\n  function selectThisWord() {\r\n    if (disabled) return;\r\n    const isCorrect = word === correctAnswer;\r\n    setAnimationState(isCorrect ? 'correct' : 'incorrect');\r\n    onSelect(isCorrect);\r\n  };\r\n  // The keyboard shortcut listener needs access to a ref, or else it will not have access to most recent props.\r\n  const selectThisWordRef = useRef(selectThisWord);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keyup', checkForKeyboardShortcut);\r\n    return (() => document.removeEventListener('keyup', checkForKeyboardShortcut));\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setAnimationState('none');\r\n  }, [correctAnswer])\r\n\r\n  useEffect(() => {\r\n    selectThisWordRef.current = selectThisWord;\r\n    if (disabled && word === correctAnswer && animationState==='none') {\r\n      setAnimationState('actualAnswer');\r\n    } \r\n    selectThisWordRef.current = selectThisWord;\r\n  }, [disabled])\r\n\r\n  function checkForKeyboardShortcut(event) {\r\n    if (parseInt(event.key) === shortcut) {\r\n      selectThisWordRef.current();\r\n    }\r\n  }\r\n\r\n  function getStyleFromAnimationState() {\r\n    let style = 'stylish-button word-button';\r\n    if (animationState === 'none') {\r\n      style += ' unselected-word';\r\n    } else if (animationState === 'actualAnswer') {\r\n      style += ' actual-word';\r\n    } else {\r\n      style += ' animate-word-background';\r\n      style += animationState === 'correct' ? ' correct-word' : ' incorrect-word';\r\n    }\r\n    if (disabled) style += ' no-pointer-events';\r\n    return style;\r\n  }\r\n\r\n  return(\r\n    <button \r\n      disabled={disabled && animationState === 'none'}\r\n      className={\r\n        `${getStyleFromAnimationState(animationState)} \r\n        ${moveOutOfView ? 'move-out-of-view' : 'move-into-view'}` \r\n      } \r\n      onClick={selectThisWord}>\r\n      {word}\r\n      <div className=\"word-shortcut-key\">{shortcut}</div>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default WordButton;","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\LivesDisplay.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\words.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\LevelDisplay.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\VerticalBreak.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\StartScreen.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\EndScreen.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\GameplayScreen.js",["61","62"],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\utilities.js",["63"],"function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction randomIndexFrom(array) {\r\n  return Math.floor(Math.random() * array.length)\r\n}\r\n\r\nfunction randomItemFrom(array) {\r\n  return array[randomIndexFrom(array)]\r\n} \r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default {\r\n  sleep, \r\n  randomIndexFrom,\r\n  randomItemFrom,\r\n  shuffle\r\n};","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\GithubFooter.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":19,"column":6,"nodeType":"70","endLine":19,"endColumn":8,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":31,"column":6,"nodeType":"70","endLine":31,"endColumn":16,"suggestions":"73"},{"ruleId":"68","severity":1,"message":"74","line":67,"column":6,"nodeType":"70","endLine":67,"endColumn":13,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":73,"column":6,"nodeType":"70","endLine":73,"endColumn":18,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":21,"column":1,"nodeType":"80","endLine":26,"endColumn":3},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkForKeyboardShortcut'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has missing dependencies: 'animationState', 'correctAnswer', 'selectThisWord', and 'word'. Either include them or remove the dependency array.",["84"],"React Hook useEffect has missing dependencies: 'generateNewLevelState', 'getGameEndData', 'lives', and 'onGameEnd'. Either include them or remove the dependency array. If 'onGameEnd' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["85"],"React Hook useEffect has a missing dependency: 'displayNextLevel'. Either include it or remove the dependency array.",["86"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [checkForKeyboardShortcut]",{"range":"95","text":"96"},"Update the dependencies array to be: [animationState, correctAnswer, disabled, selectThisWord, word]",{"range":"97","text":"98"},"Update the dependencies array to be: [generateNewLevelState, getGameEndData, lives, onGameEnd, words]",{"range":"99","text":"100"},"Update the dependencies array to be: [displayNextLevel, levelState]",{"range":"101","text":"102"},[799,801],"[checkForKeyboardShortcut]",[1132,1142],"[animationState, correctAnswer, disabled, selectThisWord, word]",[2475,2482],"[generateNewLevelState, getGameEndData, lives, onGameEnd, words]",[2596,2608],"[displayNextLevel, levelState]"]