[{"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\index.js":"1","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\reportWebVitals.js":"2","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\App.js":"3","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\WordButton.js":"4","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\LivesDisplay.js":"5","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\words.js":"6","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\LevelDisplay.js":"7","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\VerticalBreak.js":"8","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\StartScreen.js":"9","C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\EndScreen.js":"10"},{"size":219,"mtime":1610308984422,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":7084,"mtime":1610317146952,"results":"14","hashOfConfig":"12"},{"size":1741,"mtime":1610303846825,"results":"15","hashOfConfig":"12"},{"size":727,"mtime":1610288834772,"results":"16","hashOfConfig":"12"},{"size":22249,"mtime":1610307283667,"results":"17","hashOfConfig":"12"},{"size":387,"mtime":1610299753758,"results":"18","hashOfConfig":"12"},{"size":384,"mtime":1610299959008,"results":"19","hashOfConfig":"12"},{"size":1140,"mtime":1610384264176,"results":"20","hashOfConfig":"12"},{"size":1759,"mtime":1610384439210,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vp0aca",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\index.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\reportWebVitals.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\App.js",["44","45","46"],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\WordButton.js",["47","48"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './WordButton.css';\r\n\r\nconst WordButton = ({ shortcut, word, correctAnswer, onSelect, disabled, moveOutOfView }) => {\r\n  const [animationState, setAnimationState] = useState('none');\r\n  \r\n  function selectThisWord() {\r\n    if (disabled) return;\r\n    const isCorrect = word === correctAnswer;\r\n    setAnimationState(isCorrect ? 'correct' : 'incorrect');\r\n    onSelect(isCorrect);\r\n  }\r\n  // The keyboard shortcut listener needs access to a ref, or else it will not have access to most recent props.\r\n  const selectThisWordRef = useRef(selectThisWord);\r\n\r\n  function checkShortcut(event) {\r\n    if (parseInt(event.key) === shortcut) {\r\n      selectThisWordRef.current();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keyup', checkShortcut);\r\n    return (() => document.removeEventListener('keyup', checkShortcut));\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setAnimationState('none');\r\n  }, [correctAnswer])\r\n\r\n  useEffect(() => {\r\n    selectThisWordRef.current = selectThisWord;\r\n  }, [disabled])\r\n\r\n  return(\r\n    <button \r\n      disabled={disabled && animationState === 'none'}\r\n      className={`${getStyleFromAnimationState(animationState)} ${moveOutOfView ? 'move-out-of-view' : 'move-into-view'}`} \r\n      onClick={selectThisWord}>\r\n      {word}\r\n      <div className=\"word-shortcut-key\">{shortcut}</div>\r\n    </button>\r\n  )\r\n}\r\n\r\nfunction getStyleFromAnimationState(state) {\r\n  let style = 'stylish-button word-button';\r\n  if (state === 'none') {\r\n    style += ' unselected-word';\r\n  } else {\r\n    style += ' animate-word';\r\n    style += state === 'correct' ? ' correct-word' : ' incorrect-word';\r\n  }\r\n  return style;\r\n}\r\n\r\nexport default WordButton;",["49","50"],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\LivesDisplay.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\words.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\LevelDisplay.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\VerticalBreak.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\StartScreen.js",[],"C:\\Users\\liam2\\Webdev\\Projects\\word-memory-game\\src\\components\\EndScreen.js",[],{"ruleId":"51","severity":1,"message":"52","line":89,"column":6,"nodeType":"53","endLine":89,"endColumn":13,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":99,"column":6,"nodeType":"53","endLine":99,"endColumn":18,"suggestions":"56"},{"ruleId":"51","severity":1,"message":"57","line":106,"column":6,"nodeType":"53","endLine":106,"endColumn":21,"suggestions":"58"},{"ruleId":"51","severity":1,"message":"59","line":25,"column":6,"nodeType":"53","endLine":25,"endColumn":8,"suggestions":"60"},{"ruleId":"51","severity":1,"message":"61","line":33,"column":6,"nodeType":"53","endLine":33,"endColumn":16,"suggestions":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lives' and 'newLevelState'. Either include them or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'displayNextLevel'. Either include it or remove the dependency array.",["68"],"React Hook useEffect has a missing dependency: 'saveHighScore'. Either include it or remove the dependency array.",["69"],"React Hook useEffect has a missing dependency: 'checkShortcut'. Either include it or remove the dependency array.",["70"],"React Hook useEffect has a missing dependency: 'selectThisWord'. Either include it or remove the dependency array.",["71"],"no-native-reassign",["72"],"no-negated-in-lhs",["73"],{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [lives, newLevelState, words]",{"range":"84","text":"85"},"Update the dependencies array to be: [displayNextLevel, levelState]",{"range":"86","text":"87"},"Update the dependencies array to be: [currentScreen, saveHighScore]",{"range":"88","text":"89"},"Update the dependencies array to be: [checkShortcut]",{"range":"90","text":"91"},"Update the dependencies array to be: [disabled, selectThisWord]",{"range":"92","text":"93"},[3154,3161],"[lives, newLevelState, words]",[3476,3488],"[displayNextLevel, levelState]",[3623,3638],"[currentScreen, saveHighScore]",[908,910],"[checkShortcut]",[1068,1078],"[disabled, selectThisWord]"]